import torchimport torch.nn.functional as Fimport scipy.iofrom Configuration.environment_config import environmentfrom utils.data_utils import Track_DatasetSNR = 20num_tracks = 100num_frames = 100Nt = 2  # Number of targetsfile_path = 'N:/6311/6311_Users/Noam/Radar Simulation for ViterbiNet/Data from MatLab to Python/Generate Data/Multiple targets/'# file_name = 'single_target' + str(SNR) + 'SNR_' + str(num_tracks) + 'random_walk.mat'  # Random walk track datafile_name = str(Nt) + '_targets_' + str(SNR) + 'SNR_' + str(num_tracks) + 'simplewalk.mat'  # Simple walk track datamat = scipy.io.loadmat(file_path + file_name)range_label = torch.zeros((num_tracks, num_frames, Nt))doppler_label = torch.zeros((num_tracks, num_frames, Nt))observation = torch.zeros((num_tracks, num_frames, 1, environment.num_range_bins, environment.num_doppler_bins))for i in range(num_tracks):    for j in range(num_frames):        track = torch.tensor(mat['tracks'][i][j][0])        x = mat['data'][i][j]        range_label[i, j, :] = track[2:]        # range_label[i, j, 0] = track[2]        # range_label[i, j, 1] = track[3]        doppler_label[i, j, :] = track[:2]        # doppler_label[i, j, 0] = track[0]        # doppler_label[i, j, 1] = track[1]        x = torch.tensor(x).reshape(-1)        x = F.log_softmax(x, dim=0).view(1, environment.num_range_bins, environment.num_doppler_bins)        observation[i, j, :, :, :] = xtrack_data = Track_Dataset(observation, range_label, doppler_label, environment)torch.save(track_data, 'track_data_' + str(SNR) + '_SNR_' + str(Nt) + 'targets')